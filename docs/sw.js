const EXPIRATION=604800,EXPIRATION_KEY="sw-cache-expires",offline=()=>new Response("null",teapot),teapot={headers:{"Content-Type":"application/json"},status:418},openCache=caches.open("iHN-teapot");addEventListener("fetch",e=>{const{request:t}=e;e.respondWith(openCache.then(s=>Promise.all([s.match(t),fetch(t).catch(offline)]).then(([a,n])=>{const{status:o}=n;if(199<o&&o<400){const a={[EXPIRATION_KEY]:new Date(Date.now()+6048e5).toUTCString()};n.headers.forEach((e,t)=>{a[t]=e});const o=n.clone();return e.waitUntil(n.blob().then(e=>{s.put(t,new Response(e,{status:n.status,statusText:n.statusText,headers:a}))})),o}return a||n})))}),addEventListener("install",e=>{e.waitUntil(openCache.then(e=>e.addAll(["./@/3rd/uhtml.js","./@/css/app.css","./@/js/about.js","./@/js/app.js","./@/js/hn.js","./@/js/view.js","./about/","./top/?1"])))}),addEventListener("message",({data:e})=>{const{action:t}=e;switch(t){case"purge":const e=Date.now();openCache.then(t=>{t.keys().then(s=>{s.forEach(s=>{t.match(s).then(({headers:a})=>{if(a.has(EXPIRATION_KEY)){Date.parse(a.get(EXPIRATION_KEY))<e&&t.delete(s)}})})})})}});